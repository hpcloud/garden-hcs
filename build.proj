<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  Available Targets:

  /t:RestoreNugetPackages
    Restores nuget packages
  
  /t:GatherPackages
    Creates a bin directoy and copies all Prison binaries in it
    
  /t:GetHacks
    Installs go packages used whilst hacking on the code base and other dependencies (like msbuild community tasks)
    
  -->

  <PropertyGroup>
    <!-- Directory containing this .proj file -->
    <ProjectRoot>$(MSBuildThisFileDirectory)</ProjectRoot>

    <!-- Path to the packages.config file -->
    <PackagesConfigFile>&quot;$(ProjectRoot)\prison\packages.config&quot;</PackagesConfigFile>

    <!-- Path to where the nuget packages get restored -->
    <NugetPackagesDirNoQuotes>$(ProjectRoot)\prison\packages</NugetPackagesDirNoQuotes>
    <NugetPackagesDir>&quot;$(NugetPackagesDirNoQuotes)&quot;</NugetPackagesDir>

    <!-- Extra nuget server to use when downloading packages -->
    <NugetRepo>http://nuget.15.126.229.131.xip.io/nuget</NugetRepo>

    <!-- Path to nuget.exe -->
    <NuGetCommand>&quot;$(ProjectRoot)\prison\.nuget\nuget.exe&quot;</NuGetCommand>

    <!-- Path to where all prison assemblies and dependencies get copied -->
    <BinDirNoQuotes>$(ProjectRoot)\prison\bin\</BinDirNoQuotes>
    <BinDir>&quot;$(BinDirNoQuotes)&quot;</BinDir>
    
    <!-- Path to regasm.exe -->
    <RegAsmCommand>$(WINDIR)\Microsoft.NET\Framework64\v4.0.30319\regasm.exe</RegAsmCommand>
    
    <!-- Path to location of msbuild tasks -->
    <MSBuildTasksDirectory>$(ProjectRoot)\prison\msbuild\</MSBuildTasksDirectory>

    <!-- Name of msbuild community tasks nuget package -->
    <MSBuildPackage>MSBuildTasks</MSBuildPackage>
    <!-- Version of msbuild community tasks nuget package -->
    <MSBuildPackageVersion>1.4.0.88</MSBuildPackageVersion>
    <!-- MSBuild community tasks targets file -->
    <MSBuildExtensionsTargetsFile>$(MSBuildTasksDirectory)\msbuildtasks.$(MSBuildPackageVersion)\tools\MSBuild.Community.Tasks.Targets</MSBuildExtensionsTargetsFile>
    <!-- Path to msbuild extensions - required by the package -->
    <MSBuildCommunityTasksPath>$(MSBuildTasksDirectory)\msbuildtasks.$(MSBuildPackageVersion)\tools\</MSBuildCommunityTasksPath>

    <!-- Location of Diego Artifacts for Windows -->
    <DiegoArtifactsDir>$(ProjectRoot)\diego\artifacts</DiegoArtifactsDir>
    <ConsulDownloadURL>https://dl.bintray.com/mitchellh/consul/0.5.2_windows_386.zip</ConsulDownloadURL>
    <ConsulZipFile>$(DiegoArtifactsDir)\consul.zip</ConsulZipFile>
    
  </PropertyGroup>

  <!-- TODO - implement some checks to see if GOPATH is correct, dependecies exist, etc. -->
  
  <!-- Imports -->
  <Import Condition="Exists('$(MSBuildExtensionsTargetsFile)')" Project="$(MSBuildExtensionsTargetsFile)" />

  <!-- Target for restoring nuget packages -->
  <Target Name="RestoreNugetPackages" DependsOnTargets="UnregisterCOM">
    <RemoveDir Directories="$(NugetPackagesDirNoQuotes)" />
    <Exec Command="$(NuGetCommand) restore $(PackagesConfigFile) -source $(NugetRepo) -PackagesDirectory $(NugetPackagesDir)"/>
  </Target>

  <!-- Target for creating the bin directory with all required prison assemblies and artifacts -->
  <Target Name="GatherAssemblies" DependsOnTargets="RestoreNugetPackages">
    <RemoveDir Directories="$(BinDirNoQuotes)" />
    <MakeDir Directories="$(BinDirNoQuotes)"/>

    <ItemGroup>
      <Artifacts Include="$(NugetPackagesDirNoQuotes)\windows-prison*\lib\net45\*" />
      <Artifacts Include="$(NugetPackagesDirNoQuotes)\windows-prison*\Content\*" />
      <Artifacts Include="$(NugetPackagesDirNoQuotes)\alphafs*\lib\net45\*" />
      <Artifacts Include="$(NugetPackagesDirNoQuotes)\ini.net*\lib\net20\*" />
      <Artifacts Include="$(NugetPackagesDirNoQuotes)\nlog*\net45\*" />
    </ItemGroup>

    <Copy SourceFiles="@(Artifacts)" DestinationFolder="$(BinDirNoQuotes)" />
    <Message Text="Prison assemblies copied to $(BinDir)" />
  </Target>

  <!-- Target for unregistering the COM Windows Prison -->
  <Target Name="UnregisterCOM">
    <Exec Condition="Exists('$(BinDir)\CloudFoundry.WindowsPrison.ComWrapper.dll')" 
          Command="$(RegAsmCommand) &quot;$(BinDirNoQuotes)\CloudFoundry.WindowsPrison.ComWrapper.dll&quot; /unregister" />
  </Target>

  <!-- Target for registering the COM Windows Prison -->
  <Target Name="RegisterCOM" DependsOnTargets="GatherAssemblies">
    <Exec Command="$(RegAsmCommand) &quot;$(BinDirNoQuotes)\CloudFoundry.WindowsPrison.ComWrapper.dll&quot;" />
  </Target>

  <!-- Target for installing go packages and other dependecies for hacking -->
  <Target Name="GetHacks" DependsOnTargets="MSBuildCommunityTasks">
    <ItemGroup>
      <Packages Include="github.com/go-ole/go-ole" />
      <Packages Include="github.com/natefinch/npipe" />
    </ItemGroup>

    <Exec Command="go get %(Packages.identity)"/>
  </Target>
  
  <!-- Target for setting up msbuild community tasks -->
  <Target Name="MSBuildCommunityTasks">
    <MakeDir Directories="$(MSBuildTasksDirectory)" />
    <Exec Command="$(NuGetCommand) install $(MSBuildPackage) -Version $(MSBuildPackageVersion) -OutputDirectory $(MSBuildTasksDirectory)"/>
  </Target>
  
  <!-- Target for assembling diego dependencies -->
  <Target Name="AssembleDiego">
    <MakeDir Directories="$(DiegoArtifactsDir)" />
  </Target>

  <!-- Target for getting consul -->
  <Target Name="GetConsul" AfterTargets="AssembleDiego">
    <WebDownload FileUri="$(ConsulDownloadURL)" FileName="$(ConsulZipFile)"/>
    <Unzip TargetDirectory="$(DiegoArtifactsDir)" ZipFileName="$(ConsulZipFile)"/>
    <Delete Files="$(ConsulZipFile)" />
  </Target>

  <!-- List of GO projects that are part of a Windows Diego Cell -->
  <ItemGroup>
    <DiegoProj Include="$(GOPATH)\src\github.com\cloudfoundry-incubator\rep\cmd\rep">
      <Artifact>rep.exe</Artifact>
    </DiegoProj>

    <DiegoProj Include="$(GOPATH)\src\github.com\cloudfoundry-incubator\auctioneer\cmd\auctioneer">
      <Artifact>auctioneer.exe</Artifact>
    </DiegoProj>

    <DiegoProj Include="$(GOPATH)\src\github.com\cloudfoundry-incubator\converger\cmd\converger">
      <Artifact>converger.exe</Artifact>
    </DiegoProj>

    <DiegoProj Include="$(GOPATH)\src\github.com\cloudfoundry-incubator\garden-windows">
      <Artifact>garden-windows.exe</Artifact>
    </DiegoProj>
  </ItemGroup>

  <!-- Target for building the GO projects that make up a diego cell -->
  <Target Name="BuildDiegoComponents" Outputs="%(DiegoProj.Artifact)" AfterTargets="AssembleDiego">
    <Message Importance="high" Text="Building %(DiegoProj.Artifact) ..." />
    <Exec WorkingDirectory="%(DiegoProj.Identity)" Command="go build" />
    <Copy SourceFiles="%(DiegoProj.Identity)\%(DiegoProj.Artifact)" DestinationFolder="$(DiegoArtifactsDir)" />
  </Target>

  <!-- List of scripts and configuration files that need to be a part of a Diego cell -->
  <ItemGroup>
    <DiegoFile Include="$(ProjectRoot)\lattice\diego-dev-ctl.ps1">
      <ArtifactDestinationDir>$(DiegoArtifactsDir)</ArtifactDestinationDir>
    </DiegoFile>
    
    <DiegoFile Include="$(ProjectRoot)\lattice\config\consul.json">
      <ArtifactDestinationDir>$(DiegoArtifactsDir)\config</ArtifactDestinationDir>
    </DiegoFile>
    
    <DiegoFile Include="$(ProjectRoot)\lattice\config\windows-lattice.json">
      <ArtifactDestinationDir>$(DiegoArtifactsDir)\config</ArtifactDestinationDir>
    </DiegoFile>
  </ItemGroup>

  <!-- Target for copying scripts and configuration files for a Diego cell -->
  <Target Name="CopyDiegoScriptsAndConfigs" Outputs="%(DiegoProj.Identity)" AfterTargets="AssembleDiego">
    <Message Importance="high" Text="Copying %(DiegoFile.Identity) ..." />
    <MakeDir Directories="%(DiegoFile.ArtifactDestinationDir)" />
    <Copy SourceFiles="%(DiegoFile.Identity)" DestinationFolder="%(DiegoFile.ArtifactDestinationDir)" />
  </Target>
</Project>